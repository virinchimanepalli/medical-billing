"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _superagent=require("superagent"),Filters=_interopRequireWildcard(require("./utils/Filters")),Helpers=_interopRequireWildcard(require("./utils/Helpers"));function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var a=new WeakMap;return _getRequireWildcardCache=function(){return a},a}function _interopRequireWildcard(a){if(a&&a.__esModule)return a;if(null===a||"object"!==_typeof(a)&&"function"!=typeof a)return{default:a};var b=_getRequireWildcardCache();if(b&&b.has(a))return b.get(a);var c={},d=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in a)if(Object.prototype.hasOwnProperty.call(a,e)){var f=d?Object.getOwnPropertyDescriptor(a,e):null;f&&(f.get||f.set)?Object.defineProperty(c,e,f):c[e]=a[e]}return c["default"]=a,b&&b.set(a,c),c}function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}function _get(a,b,c){return _get="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(a,b,c){var d=_superPropBase(a,b);if(d){var e=Object.getOwnPropertyDescriptor(d,b);return e.get?e.get.call(c):e.value}},_get(a,b,c||a)}function _superPropBase(a,b){for(;!Object.prototype.hasOwnProperty.call(a,b)&&(a=_getPrototypeOf(a),null!==a););return a}function _inherits(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),b&&_setPrototypeOf(a,b)}function _setPrototypeOf(a,b){return _setPrototypeOf=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},_setPrototypeOf(a,b)}function _createSuper(a){var b=_isNativeReflectConstruct();return function(){var c,d=_getPrototypeOf(a);if(b){var e=_getPrototypeOf(this).constructor;c=Reflect.construct(d,arguments,e)}else c=d.apply(this,arguments);return _possibleConstructorReturn(this,c)}}function _possibleConstructorReturn(a,b){return b&&("object"===_typeof(b)||"function"==typeof b)?b:_assertThisInitialized(a)}function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(a){return!1}}function _getPrototypeOf(a){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)},_getPrototypeOf(a)}var contentRangeStructure=/^(\d+)-(\d+)\/(\d+)$/,Request=/*#__PURE__*/function(a){function b(a,d){var e,f=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};if(_classCallCheck(this,b),e=c.call(this,a,d),e.set("Accept","application/json"),{}!=f)for(var g in f)e.set(g,f[g]);// Fix for superagent disconnect on client & server.
return e.get||(e.get=e.getHeader),e}/**
   * Set auth using special formats. If only one string parameter is passed, it
   * is interpreted as a bearer token. If an object and nothing else is passed,
   * `user` and `pass` keys are extracted from it and used for basic auth.
   *
   * @param {string|object} user The user, bearer token, or user/pass object.
   * @param {string|void} pass The pass or undefined.
   * @returns {Request} The API request object.
   */_inherits(b,a);var c=_createSuper(b);return _createClass(b,[{key:"auth",value:function auth(a,c){return"string"==typeof a&&null==c?(this.set("Authorization","Bearer ".concat(a)),this):("object"===_typeof(a)&&null==c&&(c=a.pass,a=a.user),_get(_getPrototypeOf(b.prototype),"auth",this).call(this,a,c))}/**
   * Generic filter method.
   * @param {string} columnName The name of the column.
   * @param {string} filter The type of filter
   * @param { object | array | string | integer | boolean | null } criteria The value of the column to be filtered.
   * @name filter
   * @function
   * @memberOf module:Filters
   * @returns {string}
   */},{key:"filter",value:function filter(a,b,c){if(["in","cs","cd","ova","ovr","sl","sr","nxr","nxl","adj"].includes(b)&&!Array.isArray(c))return{body:null,status:400,statusCode:400,statusText:".".concat(b,"() cannot be invoked with criteria that is not an Array.")};// for ranges, length of array should always be equal to 2
if(["ovr","sl","sr","nxr","nxl","adj"].includes(b)&&2!=c.length)return{body:null,status:400,statusCode:400,statusText:".".concat(b,"() can only be invoked with a criteria that is an Array of length 2.")};if(["fts","plfts","phfts","wfts"].includes(b)&&"undefined"==typeof c.queryText)return{body:null,status:400,statusCode:400,statusText:".".concat(b,"() can only be invoked with a criteria that is an Object with key queryText.")};var d=Filters["_".concat(b.toLowerCase())](a,c);return this.query(d)}/**
   * Provides the inverse of the filter stated.
   * @param {string} columnName The name of the column.
   * @param {string} filter The type of filter
   * @param { object | array | string | integer | boolean | null } criteria The value of the column to be filtered.
   * @name filter
   * @function
   * @memberOf module:Filters
   * @returns {string}
   */},{key:"not",value:function not(a,b,c){var d=Filters["_".concat(b.toLowerCase())](a,c),e="".concat(d.split("=")[0],"=not.").concat(d.split("=")[1]);return this.query(e)}/**
   * Takes a query object and translates it to a PostgREST filter query string.
   * All values are prefixed with `eq.`.
   *
   * @param {object} query The object to match against.
   * @returns {Request} The API request object.
   */},{key:"match",value:function match(a){var b=this;return Object.keys(a).forEach(function(c){b.query("".concat(c,"=eq.").concat(a[c]))}),this}/**
   * Cleans up a select string by stripping all whitespace. Then the string is
   * set as a query string value. Also always forces a root @id column.
   *
   * @param {string} select The unformatted select string.
   * @returns {Request} The API request object.
   */},{key:"select",value:function select(a){return a&&this.query({select:a.replace(/\s/g,"")}),this}/**
   * Tells PostgREST in what order the result should be returned.
   *
   * @param {string} columnName The columnName name to order by.
   * @param {bool} ascending True for descending results, false by default.
   * @param {bool} nullsFirst True for nulls first, false by default.
   * @returns {Request} The API request object.
   */},{key:"order",value:function order(a){var b=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],c=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],d=Helpers.cleanColumnName(a),e=d.cleanedColumnName,f=d.foreignTableName;return this.query("".concat(null==f?"":"".concat(f,"."),"order=").concat(e,".").concat(b?"asc":"desc",".").concat(c?"nullsfirst":"nullslast")),this}},{key:"limit",value:function limit(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;return"number"==typeof a?(this.query("".concat(null==b?"":"".concat(b,"."),"limit=").concat(a)),this):{body:null,status:400,statusCode:400,statusText:".limit() cannot be invoked with criteria that is not a number."}}},{key:"offset",value:function offset(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;return"number"==typeof a?(this.query("".concat(null==b?"":"".concat(b,"."),"offset=").concat(a)),this):{body:null,status:400,statusCode:400,statusText:".offset() cannot be invoked with criteria that is not a number."}}/**
   * Specify a range of items for PostgREST to return. If the second value is
   * not defined, the rest of the collection will be sent back.
   *
   * @param {number} from The first object to select.
   * @param {number|void} to The last object to select.
   * @returns {Request} The API request object.
   */},{key:"range",value:function range(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;if("number"!=typeof a||"number"!=typeof b&&null!=b)return{body:null,status:400,statusCode:400,statusText:".range() cannot be invoked with parameters that are not numbers."};var c=null==b?"":b;return this.set("Range-Unit","items"),this.set("Range","".concat(a,"-").concat(c)),this}/**
   * Sets the header which signifies to PostgREST the response must be a single
   * object or 406 Not Acceptable.
   *
   * @returns {Request} The API request object.
   */},{key:"single",value:function single(){return this.set("Accept","application/vnd.pgrst.object+json"),this.set("Prefer","return=representation"),this}/**
   * Sends the request and returns a promise. The super class uses the errback
   * pattern, but this function overrides that preference to use a promise.
   *
   * @returns {Promise} Resolves when the request has completed.
   */},{key:"end",value:function end(){var a=this;return new Promise(function(c,d){// catch when .delete() is invoked without any filters
if(["DELETE","PATCH"].includes(a.method)&&0==a._query.length){var e="DELETE"===a.method?".delete()":".update()";return c({body:null,status:400,statusCode:400,statusText:"".concat(e," cannot be invoked without any filters.")})}_get(_getPrototypeOf(b.prototype),"end",a).call(a,function(a,b){if(a)return d(a);var e=b.body,f=b.headers,g=b.status,h=b.statusCode,i=b.statusText,j=f["content-range"];Array.isArray(e)&&j&&contentRangeStructure.test(j)&&(e.fullLength=parseInt(contentRangeStructure.exec(j)[3],10));return c({body:e,status:g,statusCode:h,statusText:i})})})}/**
   * Makes the Request object then-able. Allows for usage with
   * `Promise.resolve` and async/await contexts. Just a proxy for `.then()` on
   * the promise returned from `.end()`.
   *
   * @param {function} Called when the request resolves.
   * @param {function} Called when the request errors.
   * @returns {Promise} Resolves when the resolution resolves.
   */},{key:"then",value:function then(a,b){return this.end().then(a,b)}/**
   * Just a proxy for `.catch()` on the promise returned from `.end()`.
   *
   * @param {function} Called when the request errors.
   * @returns {Promise} Resolves when there is an error.
   */},{key:"catch",value:function _catch(a){return this.end()["catch"](a)}}]),b}(_superagent.Request),filters=["eq","neq","gt","lt","gte","lte","like","ilike","is","in","fts","plfts","phfts","wfts","cs","cd","ova","ovr","sl","sr","nxr","nxl","adj","or"];filters.forEach(function(a){return Request.prototype[a]=function(b,c){return this.filter(b,a,c)}});var _default=Request;exports["default"]=_default;